# -*- coding: utf-8 -*-
"""
Created on Fri Aug 24 09:41:14 2018

@author: sridh
"""

import pandas as pd
import numpy as np
import csv

data = pd.read_csv('dataset.csv')

z=1
i =0
start = 0
while z < len(data):
    if data.iloc[z-1]['sessionid'] != data.iloc[z]['sessionid']:
        blocksize = z
        if i ==0:
            with open('s_v7mal.csv','a') as csvfile:
                fieldss = ['time','cpumin', 'cpumax', 'cpumean', 'cpuq1', 'cpuq2', 'cpuq3', 'cpustd', 'cpuvar','batterymin', 'batterymax', 'batterymean', 'batteryq1', 'batteryq2', 'batteryq3', 'batterystd', 'batteryvar','memorymin', 'memorymax', 'memorymean', 'memoryq1', 'memoryq2', 'memoryq3', 'memorystd', 'memoryvar','Networkmin', 'Networkmax', 'Networkmean', 'Networkq1', 'Networkq2', 'Networkq3', 'Networkstd', 'Networkvar','Status', 'Application']
                writer = csv.DictWriter(csvfile, fieldnames=fieldss)
                writer.writeheader()
                writer.writerow({'time': data.iloc[blocksize-1]['UUID'],'cpumin': data.iloc[start:blocksize]['cpu'].min(), 'cpumax': data.iloc[start:blocksize]['cpu'].max(), 'cpumean': data.iloc[start:blocksize]['cpu'].mean(), 'cpuq1': data.iloc[start:blocksize]['cpu'].quantile(q=0.25), 'cpuq2': data.iloc[start:blocksize]['cpu'].quantile(q=0.5), 'cpuq3': data.iloc[start:blocksize]['cpu'].quantile(q=0.75), 'cpustd': data.iloc[start:blocksize]['cpu'].std(), 'cpuvar': data.iloc[start:blocksize]['cpu'].var(),'batterymin': data.iloc[start:blocksize]['battery'].min(), 'batterymax': data.iloc[start:blocksize]['battery'].max(), 'batterymean': data.iloc[start:blocksize]['battery'].mean(), 'batteryq1': data.iloc[start:blocksize]['battery'].quantile(q=0.25), 'batteryq2': data.iloc[start:blocksize]['battery'].quantile(q=0.5), 'batteryq3': data.iloc[start:blocksize]['battery'].quantile(q=0.75), 'batterystd': data.iloc[start:blocksize]['battery'].std(), 'batteryvar': data.iloc[start:blocksize]['battery'].var(), 'memorymin': data.iloc[start:blocksize]['memory'].min(), 'memorymax': data.iloc[start:blocksize]['memory'].max(), 'memorymean': data.iloc[start:blocksize]['memory'].mean(), 'memoryq1': data.iloc[start:blocksize]['memory'].quantile(q=0.25), 'memoryq2': data.iloc[start:blocksize]['memory'].quantile(q=0.5), 'memoryq3': data.iloc[start:blocksize]['memory'].quantile(q=0.75), 'memorystd': data.iloc[start:blocksize]['memory'].std(), 'memoryvar': data.iloc[start:blocksize]['memory'].var() , 'Networkmin': data.iloc[start:blocksize]['Network'].min(), 'Networkmax': data.iloc[start:blocksize]['Network'].max(), 'Networkmean': data.iloc[start:blocksize]['Network'].mean(), 'Networkq1': data.iloc[start:blocksize]['Network'].quantile(q=0.25), 'Networkq2': data.iloc[start:blocksize]['Network'].quantile(q=0.5), 'Networkq3': data.iloc[start:blocksize]['Network'].quantile(q=0.75), 'Networkstd': data.iloc[start:blocksize]['Network'].std(), 'Networkvar': data.iloc[start:blocksize]['Network'].var(), 'Status': data.iloc[blocksize-1]['Status'], 'Application': data.iloc[blocksize-1]['Application']})
                #print(ds.iloc[start:end]['cpu'].mean(), " ",ds.iloc[start:end]['battery'].mean())
                start = z+1
                z=z+1
                i=1
        else:
            with open('s_v7mal.csv', 'a') as csvfile:
                fieldss = ['time','cpumin', 'cpumax', 'cpumean', 'cpuq1', 'cpuq2', 'cpuq3', 'cpustd', 'cpuvar','batterymin', 'batterymax', 'batterymean', 'batteryq1', 'batteryq2', 'batteryq3', 'batterystd', 'batteryvar','memorymin', 'memorymax', 'memorymean', 'memoryq1', 'memoryq2', 'memoryq3', 'memorystd', 'memoryvar','Networkmin', 'Networkmax', 'Networkmean', 'Networkq1', 'Networkq2', 'Networkq3', 'Networkstd', 'Networkvar','Status', 'Application']
                writer = csv.DictWriter(csvfile, fieldnames=fieldss)
                writer.writerow({'time': data.iloc[blocksize-1]['UUID'],'cpumin': data.iloc[start:blocksize]['cpu'].min(), 'cpumax': data.iloc[start:blocksize]['cpu'].max(), 'cpumean': data.iloc[start:blocksize]['cpu'].mean(), 'cpuq1': data.iloc[start:blocksize]['cpu'].quantile(q=0.25), 'cpuq2': data.iloc[start:blocksize]['cpu'].quantile(q=0.5), 'cpuq3': data.iloc[start:blocksize]['cpu'].quantile(q=0.75), 'cpustd': data.iloc[start:blocksize]['cpu'].std(), 'cpuvar': data.iloc[start:blocksize]['cpu'].var(),'batterymin': data.iloc[start:blocksize]['battery'].min(), 'batterymax': data.iloc[start:blocksize]['battery'].max(), 'batterymean': data.iloc[start:blocksize]['battery'].mean(), 'batteryq1': data.iloc[start:blocksize]['battery'].quantile(q=0.25), 'batteryq2': data.iloc[start:blocksize]['battery'].quantile(q=0.5), 'batteryq3': data.iloc[start:blocksize]['battery'].quantile(q=0.75), 'batterystd': data.iloc[start:blocksize]['battery'].std(), 'batteryvar': data.iloc[start:blocksize]['battery'].var(), 'memorymin': data.iloc[start:blocksize]['memory'].min(), 'memorymax': data.iloc[start:blocksize]['memory'].max(), 'memorymean': data.iloc[start:blocksize]['memory'].mean(), 'memoryq1': data.iloc[start:blocksize]['memory'].quantile(q=0.25), 'memoryq2': data.iloc[start:blocksize]['memory'].quantile(q=0.5), 'memoryq3': data.iloc[start:blocksize]['memory'].quantile(q=0.75), 'memorystd': data.iloc[start:blocksize]['memory'].std(), 'memoryvar': data.iloc[start:blocksize]['memory'].var() , 'Networkmin': data.iloc[start:blocksize]['Network'].min(), 'Networkmax': data.iloc[start:blocksize]['Network'].max(), 'Networkmean': data.iloc[start:blocksize]['Network'].mean(), 'Networkq1': data.iloc[start:blocksize]['Network'].quantile(q=0.25), 'Networkq2': data.iloc[start:blocksize]['Network'].quantile(q=0.5), 'Networkq3': data.iloc[start:blocksize]['Network'].quantile(q=0.75), 'Networkstd': data.iloc[start:blocksize]['Network'].std(), 'Networkvar': data.iloc[start:blocksize]['Network'].var(),'Status': data.iloc[blocksize-1]['Status'], 'Application': data.iloc[blocksize-1]['Application']})
                start = z+1
                z=z+1
    else:
        if z == len(ds)-1:
            blocksize =z
            with open('s_v7mal.csv','a') as csvfile:
                fieldss = ['time','cpumin', 'cpumax', 'cpumean', 'cpuq1', 'cpuq2', 'cpuq3', 'cpustd', 'cpuvar','batterymin', 'batterymax', 'batterymean', 'batteryq1', 'batteryq2', 'batteryq3', 'batterystd', 'batteryvar','memorymin', 'memorymax', 'memorymean', 'memoryq1', 'memoryq2', 'memoryq3', 'memorystd', 'memoryvar','Networkmin', 'Networkmax', 'Networkmean', 'Networkq1', 'Networkq2', 'Networkq3', 'Networkstd', 'Networkvar','Status', 'Application']
                writer = csv.DictWriter(csvfile, fieldnames=fieldss)
                #writer.writeheader()
                writer.writerow({'time': data.iloc[blocksize-1]['UUID'],'cpumin': data.iloc[start:blocksize]['cpu'].min(), 'cpumax': data.iloc[start:blocksize]['cpu'].max(), 'cpumean': data.iloc[start:blocksize]['cpu'].mean(), 'cpuq1': data.iloc[start:blocksize]['cpu'].quantile(q=0.25), 'cpuq2': data.iloc[start:blocksize]['cpu'].quantile(q=0.5), 'cpuq3': data.iloc[start:blocksize]['cpu'].quantile(q=0.75), 'cpustd': data.iloc[start:blocksize]['cpu'].std(), 'cpuvar': data.iloc[start:blocksize]['cpu'].var(),'batterymin': data.iloc[start:blocksize]['battery'].min(), 'batterymax': data.iloc[start:blocksize]['battery'].max(), 'batterymean': data.iloc[start:blocksize]['battery'].mean(), 'batteryq1': data.iloc[start:blocksize]['battery'].quantile(q=0.25), 'batteryq2': data.iloc[start:blocksize]['battery'].quantile(q=0.5), 'batteryq3': data.iloc[start:blocksize]['battery'].quantile(q=0.75), 'batterystd': data.iloc[start:blocksize]['battery'].std(), 'batteryvar': data.iloc[start:blocksize]['battery'].var(), 'memorymin': data.iloc[start:blocksize]['memory'].min(), 'memorymax': data.iloc[start:blocksize]['memory'].max(), 'memorymean': data.iloc[start:blocksize]['memory'].mean(), 'memoryq1': data.iloc[start:blocksize]['memory'].quantile(q=0.25), 'memoryq2': data.iloc[start:blocksize]['memory'].quantile(q=0.5), 'memoryq3': data.iloc[start:blocksize]['memory'].quantile(q=0.75), 'memorystd': data.iloc[start:blocksize]['memory'].std(), 'memoryvar': data.iloc[start:blocksize]['memory'].var() , 'Networkmin': data.iloc[start:blocksize]['Network'].min(), 'Networkmax': data.iloc[start:blocksize]['Network'].max(), 'Networkmean': data.iloc[start:blocksize]['Network'].mean(), 'Networkq1': data.iloc[start:blocksize]['Network'].quantile(q=0.25), 'Networkq2': data.iloc[start:blocksize]['Network'].quantile(q=0.5), 'Networkq3': data.iloc[start:blocksize]['Network'].quantile(q=0.75), 'Networkstd': data.iloc[start:blocksize]['Network'].std(), 'Networkvar': data.iloc[start:blocksize]['Network'].var(),'Status': data.iloc[blocksize-1]['Status'], 'Application': data.iloc[blocksize-1]['Application']})
    z=z+1


data = pd.read_csv('sessiondataset.csv')
data = data.sample(601)
data = data.reset_index(drop=True)

data.to_csv('sessiondataset_notime.csv')
 
dataset = pd.read_csv('sessiondataset_notime.csv')
dataset['cpumin']= pd.cut(dataset.cpumin,  4,labels=["q1", "q2", "q3","q4"])
dataset['cpumax']= pd.qcut(dataset.cpumax,  4,labels=["q1", "q2", "q3","q4"] )
dataset['cpumean']= pd.qcut(dataset.cpumean,  4,labels=["q1", "q2", "q3","q4"] )
dataset['cpuq1']= pd.qcut(dataset.cpuq1,  4,labels=["q1", "q2", "q3","q4"] )
dataset['cpuq2']= pd.qcut(dataset.cpuq2,  4,labels=["q1", "q2", "q3","q4"] )
dataset['cpuq3']= pd.qcut(dataset.cpuq3,  4,labels=["q1", "q2", "q3","q4"] )
dataset['cpustd']= pd.qcut(dataset.cpustd,  4,labels=["q1", "q2", "q3","q4"] )
dataset['cpuvar']= pd.qcut(dataset.cpuvar,  4,labels=["q1", "q2", "q3","q4"] )

dataset['batterymin']= pd.cut(dataset.batterymin,  4,labels=["q1", "q2", "q3","q4"])
dataset['batterymax']= pd.qcut(dataset.batterymax,  4,labels=["q1", "q2", "q3","q4"] )
dataset['batterymean']= pd.qcut(dataset.batterymean,  4,labels=["q1", "q2", "q3","q4"] )
dataset['batteryq1']= pd.qcut(dataset.batteryq1,  4,labels=["q1", "q2", "q3","q4"] )
dataset['batteryq2']= pd.qcut(dataset.batteryq2,  4,labels=["q1", "q2", "q3","q4"] )
dataset['batteryq3']= pd.qcut(dataset.batteryq3,  4,labels=["q1", "q2", "q3","q4"] )
dataset['batterystd']= pd.qcut(dataset.batterystd,  4,labels=["q1", "q2", "q3","q4"] )
dataset['batteryvar']= pd.qcut(dataset.batteryvar,  4,labels=["q1", "q2", "q3","q4"] )

dataset['memorymin']= pd.cut(dataset.memorymin,  4,labels=["q1", "q2", "q3","q4"])
dataset['memorymax']= pd.qcut(dataset.memorymax,  4,labels=["q1", "q2", "q3","q4"] )
dataset['memorymean']= pd.qcut(dataset.memorymean,  4,labels=["q1", "q2", "q3","q4"] )
dataset['memoryq1']= pd.qcut(dataset.memoryq1,  4,labels=["q1", "q2", "q3","q4"] )
dataset['memoryq2']= pd.qcut(dataset.memoryq2,  4,labels=["q1", "q2", "q3","q4"] )
dataset['memoryq3']= pd.qcut(dataset.memoryq3,  4,labels=["q1", "q2", "q3","q4"] )
dataset['memorystd']= pd.qcut(dataset.memorystd,  4,labels=["q1", "q2", "q3","q4"] )
dataset['memoryvar']= pd.qcut(dataset.memoryvar,  4,labels=["q1", "q2", "q3","q4"] )

dataset['Networkmin']= pd.cut(dataset.Networkmin,  4,labels=["q1", "q2", "q3","q4"])
dataset['Networkmax']= pd.qcut(dataset.Networkmax,  4,labels=["q1", "q2", "q3","q4"] )
dataset['Networkmean']= pd.qcut(dataset.Networkmean,  4,labels=["q1", "q2", "q3","q4"] )
dataset['Networkq1']= pd.cut(dataset.Networkq1,  4,labels=["q1", "q2", "q3","q4"] )
dataset['Networkq2']= pd.cut(dataset.Networkq2,  4,labels=["q1", "q2", "q3","q4"] )
dataset['Networkq3']= pd.qcut(dataset.Networkq3,  4,labels=["q1", "q2", "q3","q4"] )
dataset['Networkstd']= pd.qcut(dataset.Networkstd,  4,labels=["q1", "q2", "q3","q4"] )
dataset['Networkvar']= pd.qcut(dataset.Networkvar,  4,labels=["q1", "q2", "q3","q4"] )

dataset.to_csv('nb-sessiondataset_notime.csv',sep=',')
   
#print(ds.iloc[start:z]['cpu'].mean(), " ",ds.iloc[start:z]['battery'].mean())